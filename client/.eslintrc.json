{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks"
  ],
  "rules": {
    "react/jsx-uses-react": "off", // Not needed in React 17+
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-first-prop-new-line": ["error", "multiline-multiprop"],
    "react/jsx-closing-bracket-location": ["error", "line-aligned"],
    "react/jsx-props-no-multi-spaces": ["error"],
    "react/jsx-max-props-per-line": [
      "error",
      { "maximum": 1, "when": "multiline" }
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],

    "react/react-in-jsx-scope": "off", // Not needed in React 17+
    "react/prop-types": "off", // Disable prop-types as we're using TypeScript
    "react/jsx-no-target-blank": "warn", // Warns if anchor links don't have `rel="noopener noreferrer"`
    "react/jsx-uses-vars": "error", // Prevents variables used in JSX from being incorrectly marked as unused
    "react/no-unescaped-entities": "warn", // Warns about unescaped entities in JSX
    "react/no-unknown-property": "warn", // Warns when using unknown DOM properties
    "react/self-closing-comp": "warn", // Warns if components without children don't self-close
    "react/jsx-pascal-case": "error", // Enforces PascalCase for user-defined JSX components

    "react-hooks/rules-of-hooks": "error", // Enforces the rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies

    "semi": ["error", "always"], // Enforces semicolons
    "quotes": ["error", "single"], // Enforces single quotes
    "indent": ["error", 2], // Enforces 2-space indentation
    "no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }], // Warns about unused variables but ignores those starting with an underscore
    "no-console": "warn", // Warns about console logs
    "eqeqeq": ["error", "always"], // Enforces strict equality checks
    "no-trailing-spaces": "error" // Disallows trailing whitespace
  },
  "settings": {
    "react": {
      "version": "detect" // Automatically detects the React version
    }
  }
}
